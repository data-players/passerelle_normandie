{"ast":null,"code":"/*\n * Copyright (c) 2016-2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst api = {};\nmodule.exports = api; // define setImmediate and nextTick\n//// nextTick implementation with browser-compatible fallback ////\n// from https://github.com/caolan/async/blob/master/lib/async.js\n// capture the global reference to guard against fakeTimer mocks\n\nconst _setImmediate = typeof setImmediate === 'function' && setImmediate;\n\nconst _delay = _setImmediate ? // not a direct alias (for IE10 compatibility)\nfn => _setImmediate(fn) : fn => setTimeout(fn, 0);\n\nif (typeof process === 'object' && typeof process.nextTick === 'function') {\n  api.nextTick = process.nextTick;\n} else {\n  api.nextTick = _delay;\n}\n\napi.setImmediate = _setImmediate ? _delay : api.nextTick;\n/**\n * Clones an object, array, or string/number. If a typed JavaScript object\n * is given, such as a Date, it will be converted to a string.\n *\n * @param value the value to clone.\n *\n * @return the cloned value.\n */\n\napi.clone = function (value) {\n  if (value && typeof value === 'object') {\n    let rval;\n\n    if (Array.isArray(value)) {\n      rval = [];\n\n      for (let i = 0; i < value.length; ++i) {\n        rval[i] = api.clone(value[i]);\n      }\n    } else if (api.isObject(value)) {\n      rval = {};\n\n      for (const key in value) {\n        rval[key] = api.clone(value[key]);\n      }\n    } else {\n      rval = value.toString();\n    }\n\n    return rval;\n  }\n\n  return value;\n};\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\n\n\napi.isObject = v => Object.prototype.toString.call(v) === '[object Object]';\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\n\n\napi.isUndefined = v => typeof v === 'undefined';\n\napi.callbackify = fn => {\n  return async function (...args) {\n    const callback = args[args.length - 1];\n\n    if (typeof callback === 'function') {\n      args.pop();\n    }\n\n    let result;\n\n    try {\n      result = await fn.apply(null, args);\n    } catch (e) {\n      if (typeof callback === 'function') {\n        return _invokeCallback(callback, e);\n      }\n\n      throw e;\n    }\n\n    if (typeof callback === 'function') {\n      return _invokeCallback(callback, null, result);\n    }\n\n    return result;\n  };\n};\n\nfunction _invokeCallback(callback, err, result) {\n  try {\n    return callback(err, result);\n  } catch (unhandledError) {\n    // throw unhandled errors to prevent \"unhandled rejected promise\"\n    // and simulate what would have happened in a promiseless API\n    process.nextTick(() => {\n      throw unhandledError;\n    });\n  }\n}","map":{"version":3,"sources":["/app/node_modules/rdf-canonize/lib/util.js"],"names":["api","module","exports","_setImmediate","setImmediate","_delay","fn","setTimeout","process","nextTick","clone","value","rval","Array","isArray","i","length","isObject","key","toString","v","Object","prototype","call","isUndefined","callbackify","args","callback","pop","result","apply","e","_invokeCallback","err","unhandledError"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2016-2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst api = {};\nmodule.exports = api;\n\n// define setImmediate and nextTick\n//// nextTick implementation with browser-compatible fallback ////\n// from https://github.com/caolan/async/blob/master/lib/async.js\n\n// capture the global reference to guard against fakeTimer mocks\nconst _setImmediate = typeof setImmediate === 'function' && setImmediate;\n\nconst _delay = _setImmediate ?\n  // not a direct alias (for IE10 compatibility)\n  fn => _setImmediate(fn) :\n  fn => setTimeout(fn, 0);\n\nif(typeof process === 'object' && typeof process.nextTick === 'function') {\n  api.nextTick = process.nextTick;\n} else {\n  api.nextTick = _delay;\n}\napi.setImmediate = _setImmediate ? _delay : api.nextTick;\n\n/**\n * Clones an object, array, or string/number. If a typed JavaScript object\n * is given, such as a Date, it will be converted to a string.\n *\n * @param value the value to clone.\n *\n * @return the cloned value.\n */\napi.clone = function(value) {\n  if(value && typeof value === 'object') {\n    let rval;\n    if(Array.isArray(value)) {\n      rval = [];\n      for(let i = 0; i < value.length; ++i) {\n        rval[i] = api.clone(value[i]);\n      }\n    } else if(api.isObject(value)) {\n      rval = {};\n      for(const key in value) {\n        rval[key] = api.clone(value[key]);\n      }\n    } else {\n      rval = value.toString();\n    }\n    return rval;\n  }\n  return value;\n};\n\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\napi.isObject = v => Object.prototype.toString.call(v) === '[object Object]';\n\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\napi.isUndefined = v => typeof v === 'undefined';\n\napi.callbackify = fn => {\n  return async function(...args) {\n    const callback = args[args.length - 1];\n    if(typeof callback === 'function') {\n      args.pop();\n    }\n\n    let result;\n    try {\n      result = await fn.apply(null, args);\n    } catch(e) {\n      if(typeof callback === 'function') {\n        return _invokeCallback(callback, e);\n      }\n      throw e;\n    }\n\n    if(typeof callback === 'function') {\n      return _invokeCallback(callback, null, result);\n    }\n\n    return result;\n  };\n};\n\nfunction _invokeCallback(callback, err, result) {\n  try {\n    return callback(err, result);\n  } catch(unhandledError) {\n    // throw unhandled errors to prevent \"unhandled rejected promise\"\n    // and simulate what would have happened in a promiseless API\n    process.nextTick(() => {\n      throw unhandledError;\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"script"}