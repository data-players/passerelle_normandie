{"ast":null,"code":"import { useState, useCallback } from 'react';\nimport { useDelete } from '../../dataProvider';\nimport { CRUD_DELETE } from '../../actions';\nimport { useRefresh, useNotify, useRedirect } from '../../sideEffect';\n/**\n * Prepare a set of callbacks for a delete button guarded by confirmation dialog\n *\n * @example\n *\n * const DeleteButton = ({\n *     resource,\n *     record,\n *     basePath,\n *     redirect,\n *     onClick,\n *     ...rest\n * }) => {\n *     const {\n *         open,\n *         loading,\n *         handleDialogOpen,\n *         handleDialogClose,\n *         handleDelete,\n *     } = useDeleteWithConfirmController({\n *         resource,\n *         record,\n *         redirect,\n *         basePath,\n *         onClick,\n *     });\n *\n *     return (\n *         <Fragment>\n *             <Button\n *                 onClick={handleDialogOpen}\n *                 label=\"ra.action.delete\"\n *                 {...rest}\n *             >\n *                 {icon}\n *             </Button>\n *             <Confirm\n *                 isOpen={open}\n *                 loading={loading}\n *                 title=\"ra.message.delete_title\"\n *                 content=\"ra.message.delete_content\"\n *                 translateOptions={{\n *                     name: resource,\n *                     id: record.id,\n *                 }}\n *                 onConfirm={handleDelete}\n *                 onClose={handleDialogClose}\n *             />\n *         </Fragment>\n *     );\n * };\n */\n\nvar useDeleteWithConfirmController = function (_a) {\n  var resource = _a.resource,\n      record = _a.record,\n      redirectTo = _a.redirect,\n      basePath = _a.basePath,\n      onClick = _a.onClick,\n      onSuccess = _a.onSuccess,\n      onFailure = _a.onFailure;\n\n  var _b = useState(false),\n      open = _b[0],\n      setOpen = _b[1];\n\n  var notify = useNotify();\n  var redirect = useRedirect();\n  var refresh = useRefresh();\n\n  var _c = useDelete(resource, null, null, {\n    action: CRUD_DELETE,\n    onSuccess: function (response) {\n      setOpen(false);\n\n      if (onSuccess === undefined) {\n        notify('ra.notification.deleted', 'info', {\n          smart_count: 1\n        });\n        redirect(redirectTo, basePath);\n        refresh();\n      } else {\n        onSuccess(response);\n      }\n    },\n    onFailure: function (error) {\n      setOpen(false);\n\n      if (onFailure === undefined) {\n        notify(typeof error === 'string' ? error : error.message || 'ra.notification.http_error', 'warning');\n      } else {\n        onFailure(error);\n      }\n    },\n    undoable: false\n  }),\n      deleteOne = _c[0],\n      loading = _c[1].loading;\n\n  var handleDialogOpen = function (e) {\n    setOpen(true);\n    e.stopPropagation();\n  };\n\n  var handleDialogClose = function (e) {\n    setOpen(false);\n    e.stopPropagation();\n  };\n\n  var handleDelete = useCallback(function (event) {\n    deleteOne({\n      payload: {\n        id: record.id,\n        previousData: record\n      }\n    });\n\n    if (typeof onClick === 'function') {\n      onClick(event);\n    }\n  }, [deleteOne, onClick, record]);\n  return {\n    open: open,\n    loading: loading,\n    handleDialogOpen: handleDialogOpen,\n    handleDialogClose: handleDialogClose,\n    handleDelete: handleDelete\n  };\n};\n\nexport default useDeleteWithConfirmController;","map":{"version":3,"sources":["/app/node_modules/ra-core/esm/controller/button/useDeleteWithConfirmController.js"],"names":["useState","useCallback","useDelete","CRUD_DELETE","useRefresh","useNotify","useRedirect","useDeleteWithConfirmController","_a","resource","record","redirectTo","redirect","basePath","onClick","onSuccess","onFailure","_b","open","setOpen","notify","refresh","_c","action","response","undefined","smart_count","error","message","undoable","deleteOne","loading","handleDialogOpen","e","stopPropagation","handleDialogClose","handleDelete","event","payload","id","previousData"],"mappings":"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","sourcesContent":["import { useState, useCallback, } from 'react';\nimport { useDelete } from '../../dataProvider';\nimport { CRUD_DELETE } from '../../actions';\nimport { useRefresh, useNotify, useRedirect, } from '../../sideEffect';\n/**\n * Prepare a set of callbacks for a delete button guarded by confirmation dialog\n *\n * @example\n *\n * const DeleteButton = ({\n *     resource,\n *     record,\n *     basePath,\n *     redirect,\n *     onClick,\n *     ...rest\n * }) => {\n *     const {\n *         open,\n *         loading,\n *         handleDialogOpen,\n *         handleDialogClose,\n *         handleDelete,\n *     } = useDeleteWithConfirmController({\n *         resource,\n *         record,\n *         redirect,\n *         basePath,\n *         onClick,\n *     });\n *\n *     return (\n *         <Fragment>\n *             <Button\n *                 onClick={handleDialogOpen}\n *                 label=\"ra.action.delete\"\n *                 {...rest}\n *             >\n *                 {icon}\n *             </Button>\n *             <Confirm\n *                 isOpen={open}\n *                 loading={loading}\n *                 title=\"ra.message.delete_title\"\n *                 content=\"ra.message.delete_content\"\n *                 translateOptions={{\n *                     name: resource,\n *                     id: record.id,\n *                 }}\n *                 onConfirm={handleDelete}\n *                 onClose={handleDialogClose}\n *             />\n *         </Fragment>\n *     );\n * };\n */\nvar useDeleteWithConfirmController = function (_a) {\n    var resource = _a.resource, record = _a.record, redirectTo = _a.redirect, basePath = _a.basePath, onClick = _a.onClick, onSuccess = _a.onSuccess, onFailure = _a.onFailure;\n    var _b = useState(false), open = _b[0], setOpen = _b[1];\n    var notify = useNotify();\n    var redirect = useRedirect();\n    var refresh = useRefresh();\n    var _c = useDelete(resource, null, null, {\n        action: CRUD_DELETE,\n        onSuccess: function (response) {\n            setOpen(false);\n            if (onSuccess === undefined) {\n                notify('ra.notification.deleted', 'info', { smart_count: 1 });\n                redirect(redirectTo, basePath);\n                refresh();\n            }\n            else {\n                onSuccess(response);\n            }\n        },\n        onFailure: function (error) {\n            setOpen(false);\n            if (onFailure === undefined) {\n                notify(typeof error === 'string'\n                    ? error\n                    : error.message || 'ra.notification.http_error', 'warning');\n            }\n            else {\n                onFailure(error);\n            }\n        },\n        undoable: false,\n    }), deleteOne = _c[0], loading = _c[1].loading;\n    var handleDialogOpen = function (e) {\n        setOpen(true);\n        e.stopPropagation();\n    };\n    var handleDialogClose = function (e) {\n        setOpen(false);\n        e.stopPropagation();\n    };\n    var handleDelete = useCallback(function (event) {\n        deleteOne({\n            payload: { id: record.id, previousData: record },\n        });\n        if (typeof onClick === 'function') {\n            onClick(event);\n        }\n    }, [deleteOne, onClick, record]);\n    return { open: open, loading: loading, handleDialogOpen: handleDialogOpen, handleDialogClose: handleDialogClose, handleDelete: handleDelete };\n};\nexport default useDeleteWithConfirmController;\n"]},"metadata":{},"sourceType":"module"}