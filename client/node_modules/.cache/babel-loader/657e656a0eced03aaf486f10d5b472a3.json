{"ast":null,"code":"/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {\n  isSubjectReference: _isSubjectReference\n} = require('./graphTypes');\n\nconst {\n  createMergedNodeMap: _createMergedNodeMap\n} = require('./nodeMap');\n\nconst api = {};\nmodule.exports = api;\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the expanded JSON-LD to flatten.\n *\n * @return the flattened output.\n */\n\napi.flatten = input => {\n  const defaultGraph = _createMergedNodeMap(input); // produce flattened output\n\n\n  const flattened = [];\n  const keys = Object.keys(defaultGraph).sort();\n\n  for (let ki = 0; ki < keys.length; ++ki) {\n    const node = defaultGraph[keys[ki]]; // only add full subjects to top-level\n\n    if (!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n\n  return flattened;\n};","map":{"version":3,"sources":["/app/node_modules/jsonld/lib/flatten.js"],"names":["isSubjectReference","_isSubjectReference","require","createMergedNodeMap","_createMergedNodeMap","api","module","exports","flatten","input","defaultGraph","flattened","keys","Object","sort","ki","length","node","push"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,MAAM;AACJA,EAAAA,kBAAkB,EAAEC;AADhB,IAEFC,OAAO,CAAC,cAAD,CAFX;;AAIA,MAAM;AACJC,EAAAA,mBAAmB,EAAEC;AADjB,IAEFF,OAAO,CAAC,WAAD,CAFX;;AAIA,MAAMG,GAAG,GAAG,EAAZ;AACAC,MAAM,CAACC,OAAP,GAAiBF,GAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,GAAG,CAACG,OAAJ,GAAcC,KAAK,IAAI;AACrB,QAAMC,YAAY,GAAGN,oBAAoB,CAACK,KAAD,CAAzC,CADqB,CAGrB;;;AACA,QAAME,SAAS,GAAG,EAAlB;AACA,QAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,YAAZ,EAA0BI,IAA1B,EAAb;;AACA,OAAI,IAAIC,EAAE,GAAG,CAAb,EAAgBA,EAAE,GAAGH,IAAI,CAACI,MAA1B,EAAkC,EAAED,EAApC,EAAwC;AACtC,UAAME,IAAI,GAAGP,YAAY,CAACE,IAAI,CAACG,EAAD,CAAL,CAAzB,CADsC,CAEtC;;AACA,QAAG,CAACd,mBAAmB,CAACgB,IAAD,CAAvB,EAA+B;AAC7BN,MAAAA,SAAS,CAACO,IAAV,CAAeD,IAAf;AACD;AACF;;AACD,SAAON,SAAP;AACD,CAdD","sourcesContent":["/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {\n  isSubjectReference: _isSubjectReference\n} = require('./graphTypes');\n\nconst {\n  createMergedNodeMap: _createMergedNodeMap\n} = require('./nodeMap');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the expanded JSON-LD to flatten.\n *\n * @return the flattened output.\n */\napi.flatten = input => {\n  const defaultGraph = _createMergedNodeMap(input);\n\n  // produce flattened output\n  const flattened = [];\n  const keys = Object.keys(defaultGraph).sort();\n  for(let ki = 0; ki < keys.length; ++ki) {\n    const node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n  return flattened;\n};\n"]},"metadata":{},"sourceType":"script"}