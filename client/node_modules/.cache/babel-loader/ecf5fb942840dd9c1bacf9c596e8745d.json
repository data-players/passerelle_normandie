{"ast":null,"code":"/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst api = {};\nmodule.exports = api;\n/**\n * Returns true if the given value is an Array.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Array, false if not.\n */\n\napi.isArray = Array.isArray;\n/**\n * Returns true if the given value is a Boolean.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Boolean, false if not.\n */\n\napi.isBoolean = v => typeof v === 'boolean' || Object.prototype.toString.call(v) === '[object Boolean]';\n/**\n * Returns true if the given value is a double.\n *\n * @param v the value to check.\n *\n * @return true if the value is a double, false if not.\n */\n\n\napi.isDouble = v => api.isNumber(v) && (String(v).indexOf('.') !== -1 || Math.abs(v) >= 1e21);\n/**\n * Returns true if the given value is an empty Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an empty Object, false if not.\n */\n\n\napi.isEmptyObject = v => api.isObject(v) && Object.keys(v).length === 0;\n/**\n * Returns true if the given value is a Number.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Number, false if not.\n */\n\n\napi.isNumber = v => typeof v === 'number' || Object.prototype.toString.call(v) === '[object Number]';\n/**\n * Returns true if the given value is numeric.\n *\n * @param v the value to check.\n *\n * @return true if the value is numeric, false if not.\n */\n\n\napi.isNumeric = v => !isNaN(parseFloat(v)) && isFinite(v);\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\n\n\napi.isObject = v => Object.prototype.toString.call(v) === '[object Object]';\n/**\n * Returns true if the given value is a String.\n *\n * @param v the value to check.\n *\n * @return true if the value is a String, false if not.\n */\n\n\napi.isString = v => typeof v === 'string' || Object.prototype.toString.call(v) === '[object String]';\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\n\n\napi.isUndefined = v => typeof v === 'undefined';","map":{"version":3,"sources":["/app/node_modules/jsonld/lib/types.js"],"names":["api","module","exports","isArray","Array","isBoolean","v","Object","prototype","toString","call","isDouble","isNumber","String","indexOf","Math","abs","isEmptyObject","isObject","keys","length","isNumeric","isNaN","parseFloat","isFinite","isString","isUndefined"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,MAAMA,GAAG,GAAG,EAAZ;AACAC,MAAM,CAACC,OAAP,GAAiBF,GAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,GAAG,CAACG,OAAJ,GAAcC,KAAK,CAACD,OAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAH,GAAG,CAACK,SAAJ,GAAgBC,CAAC,IAAK,OAAOA,CAAP,KAAa,SAAb,IACpBC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,CAA/B,MAAsC,kBADxC;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAN,GAAG,CAACW,QAAJ,GAAeL,CAAC,IAAIN,GAAG,CAACY,QAAJ,CAAaN,CAAb,MACjBO,MAAM,CAACP,CAAD,CAAN,CAAUQ,OAAV,CAAkB,GAAlB,MAA2B,CAAC,CAA5B,IAAiCC,IAAI,CAACC,GAAL,CAASV,CAAT,KAAe,IAD/B,CAApB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAN,GAAG,CAACiB,aAAJ,GAAoBX,CAAC,IAAIN,GAAG,CAACkB,QAAJ,CAAaZ,CAAb,KAAmBC,MAAM,CAACY,IAAP,CAAYb,CAAZ,EAAec,MAAf,KAA0B,CAAtE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACApB,GAAG,CAACY,QAAJ,GAAeN,CAAC,IAAK,OAAOA,CAAP,KAAa,QAAb,IACnBC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,CAA/B,MAAsC,iBADxC;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAN,GAAG,CAACqB,SAAJ,GAAgBf,CAAC,IAAI,CAACgB,KAAK,CAACC,UAAU,CAACjB,CAAD,CAAX,CAAN,IAAyBkB,QAAQ,CAAClB,CAAD,CAAtD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAN,GAAG,CAACkB,QAAJ,GAAeZ,CAAC,IAAIC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,CAA/B,MAAsC,iBAA1D;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAN,GAAG,CAACyB,QAAJ,GAAenB,CAAC,IAAK,OAAOA,CAAP,KAAa,QAAb,IACnBC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,CAA/B,MAAsC,iBADxC;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAN,GAAG,CAAC0B,WAAJ,GAAkBpB,CAAC,IAAI,OAAOA,CAAP,KAAa,WAApC","sourcesContent":["/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Returns true if the given value is an Array.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Array, false if not.\n */\napi.isArray = Array.isArray;\n\n/**\n * Returns true if the given value is a Boolean.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Boolean, false if not.\n */\napi.isBoolean = v => (typeof v === 'boolean' ||\n  Object.prototype.toString.call(v) === '[object Boolean]');\n\n/**\n * Returns true if the given value is a double.\n *\n * @param v the value to check.\n *\n * @return true if the value is a double, false if not.\n */\napi.isDouble = v => api.isNumber(v) &&\n  (String(v).indexOf('.') !== -1 || Math.abs(v) >= 1e21);\n\n/**\n * Returns true if the given value is an empty Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an empty Object, false if not.\n */\napi.isEmptyObject = v => api.isObject(v) && Object.keys(v).length === 0;\n\n/**\n * Returns true if the given value is a Number.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Number, false if not.\n */\napi.isNumber = v => (typeof v === 'number' ||\n  Object.prototype.toString.call(v) === '[object Number]');\n\n/**\n * Returns true if the given value is numeric.\n *\n * @param v the value to check.\n *\n * @return true if the value is numeric, false if not.\n */\napi.isNumeric = v => !isNaN(parseFloat(v)) && isFinite(v);\n\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\napi.isObject = v => Object.prototype.toString.call(v) === '[object Object]';\n\n/**\n * Returns true if the given value is a String.\n *\n * @param v the value to check.\n *\n * @return true if the value is a String, false if not.\n */\napi.isString = v => (typeof v === 'string' ||\n  Object.prototype.toString.call(v) === '[object String]');\n\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\napi.isUndefined = v => typeof v === 'undefined';\n"]},"metadata":{},"sourceType":"script"}