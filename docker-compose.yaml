version: '3.5'
services:
  fuseki:
    image: stain/jena-fuseki:3.10.0
    container_name: fuseki-passerelle
    volumes:
      - ./data/fuseki:/fuseki
      - ./data/staging:/staging
    ports:
      - "3030:3030"
    expose:
      - "3030"
    networks:
      - semapps
    environment:
      ADMIN_PASSWORD: "admin"

  middleware:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: middleware-passerelle
    depends_on:
      - fuseki
    restart: always
    volumes:
      - ./server/:/app
    environment:
      - SEMAPPS_SPARQL_ENDPOINT=http://fuseki-passerelle:3030/
      - SEMAPPS_MAIN_DATASET=localData
      - SEMAPPS_JENA_USER=admin
      - SEMAPPS_JENA_PASSWORD=admin
      - SEMAPPS_HOME_URL=http://localhost:3000/
      - SEMAPPS_OIDC_ISSUER=https://login.passerellenormandie.fr/auth/realms/master/
      - SEMAPPS_OIDC_CLIENT_ID=passerelle-normandie
      - SEMAPPS_REDIS_URL=redis://redis:6379/0
    networks:
      - semapps
    ports:
      - "3000:3000"
    expose:
      - "3000"
    command: bash -c "yarn install &&  pm2-runtime 'yarn run dev'"

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: frontend-passerelle
    environment:
      - REACT_APP_MIDDLEWARE_URL=http://localhost:3000/
      - REACT_APP_ADMIN=false
      - PORT=5000
    volumes:
      - ./client:/app
    networks:
      - semapps
    ports:
      - "5000:5000"
    expose:
      - "5000"
    command: bash -c "yarn install && yarn start"

  admin:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: admin-passerelle
    environment:
      - REACT_APP_MIDDLEWARE_URL=http://localhost:3000/
      - REACT_APP_ADMIN=true
      - PORT=5010
    volumes:
      - ./client:/app
    networks:
      - semapps
    ports:
      - "5010:5010"
    expose:
      - "5010"
    command: bash -c "yarn install && yarn start"

  redis:
    image: redis
    container_name: redis_passerelle
    ports:
      - "6379:6379"
    expose:
      - "6379"
    volumes:
      - ./data/redis_data:/data
    networks:
      - semapps
    command: ["redis-server", "--appendonly", "yes"]


volumes:
  redis_data:
networks:
  semapps:
    name: semapps_network
